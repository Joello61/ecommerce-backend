security:
    # Configuration du hashage des mots de passe
    password_hashers:
        App\Entity\User:
            algorithm: auto
            cost: 4 # en dev, 15 en production
            time_cost: 3
            memory_cost: 10

    # Fournisseurs d'utilisateurs
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_public:
            pattern: ^/api/auth
            stateless: true
            security: false  # Pas de JWT ici

        # Route de connexion avec JWT
        api_login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Routes API protégées par JWT (nom du service corrigé pour v3.1.1)
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        # Firewall principal (pour d'éventuelles routes web)
        main:
            lazy: true
            provider: app_user_provider

    # Contrôle d'accès par routes
    access_control:
        # Routes publiques (pas d'authentification requise)
        - { path: ^/api/auth/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/check, roles: PUBLIC_ACCESS }
        - { path: ^/api/products, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/api/categories, roles: PUBLIC_ACCESS, methods: [GET] }
        - { path: ^/api/auth/forgot-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/api/auth/verify-reset-token, roles: PUBLIC_ACCESS }
        - { path: ^/api/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/_platform, roles: PUBLIC_ACCESS }

        # Routes nécessitant une authentification
        - { path: ^/api/cart, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/orders, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/profile, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/users/me, roles: IS_AUTHENTICATED_FULLY }

        # Toutes les autres routes API nécessitent une authentification
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

# Configuration spécifique pour l'environnement de test
when@test:
    security:
        password_hashers:
            # Hashage simplifié pour les tests (plus rapide)
            App\Entity\User:
                algorithm: auto
                cost: 4 # Valeur la plus basse pour bcrypt
                time_cost: 3 # Valeur la plus basse pour argon
                memory_cost: 10 # Valeur la plus basse pour argon

# Configuration pour la production
when@prod:
    security:
        password_hashers:
            App\Entity\User:
                algorithm: auto
                cost: 15 # Sécurité renforcée en production
                time_cost: 4
                memory_cost: 1024
